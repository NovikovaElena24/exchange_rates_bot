# Project imports
from get_rates.get_rates import get_mig_current_rate
from get_rates.get_rates import get_mig_official_rate
from get_rates.get_rates import get_cbr_official_rate
import logging


async def diff_rate(diff):
    if diff < 0:
        return f"(üîª{diff})"
    elif diff > 0:
        return f"(üî∫{diff})"
    return f"(üü¢{diff})"


async def alarm_mig_rate(
    mig_rates_buy, mig_rates_sell, last_buy_rates, last_sell_rates
):

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
    mig_rates_text = (
        f"‚ùóÔ∏è<b><u>–ü—Ä–æ–∏–∑–æ—à–ª–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –ø–æ –¥–∞–Ω–Ω—ã–º ¬´–ú–∏–ì¬ª —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ä–∞—Å—Å—ã–ª–∫–∏:</u></b>\n\n"
        f"üí∞<b>–¢–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç ¬´–ú–∏–ì¬ª:</b>\n"
    )

    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫
    if mig_rates_buy and mig_rates_sell:
        mig_rates_text += f"\n<code>{'–í–∞–ª—é—Ç–∞':<8}{'–ü–æ–∫—É–ø–∫–∞':<13}\n"
        for currency in sorted(mig_rates_buy):
            buy_rate = mig_rates_buy[currency]
            last_buy_rate = last_buy_rates[currency]
            diff_buy = await diff_rate(round(buy_rate - last_buy_rate, 2))
            mig_rates_text += f"{currency:<8}{buy_rate:<6}{diff_buy:<7}\n"
        mig_rates_text += "</code>"

        mig_rates_text += f"\n<code>{'–í–∞–ª—é—Ç–∞':<8}{'–ü—Ä–æ–¥–∞–∂–∞':<13}\n"
        for currency in sorted(mig_rates_sell):
            sell_rate = mig_rates_sell[currency]
            last_sell_rate = last_sell_rates[currency]
            diff_sell = await diff_rate(round(sell_rate - last_sell_rate, 2))
            mig_rates_text += f"{currency:<8}{sell_rate:<6}{diff_sell:<7}\n"
        mig_rates_text += "</code>"
    else:
        mig_rates_text += "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–∑–∂–µ –∫–æ–º–∞–Ω–¥–æ–π /send_rates\n"
    return mig_rates_text


async def mig_rate(mig_rates_buy, mig_rates_sell):

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
    mig_rates_text = "üí∞<b><u>–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç ¬´–ú–∏–ì¬ª:</u></b>\n"

    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫
    if mig_rates_buy and mig_rates_sell:
        mig_rates_text += "\n<code>–í–∞–ª—é—Ç–∞    –ü–æ–∫—É–ø–∫–∞   –ü—Ä–æ–¥–∞–∂–∞\n"
        for currency in sorted(mig_rates_buy):
            buy_rate = mig_rates_buy[currency]
            sell_rate = mig_rates_sell[currency]
            mig_rates_text += f"{currency:<10}{buy_rate:<10}{sell_rate:<7}\n"
        mig_rates_text += "</code>"
    else:
        mig_rates_text += "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–∑–∂–µ –∫–æ–º–∞–Ω–¥–æ–π /send_rates\n"
    return mig_rates_text


async def kz_rate(official_rates_kz):

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
    official_rates_kz_text = "üáµüáº<b><u>–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –ù–ë –†–ö:</u></b>\n"

    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫
    if official_rates_kz:
        official_rates_kz_text += "<code>"
        official_rates_kz_text += (
            "\n".join(
                f"{k:<10}{official_rates_kz[k]:<10}" for k in sorted(official_rates_kz)
            )
            + "\n</code>"
        )
    else:
        official_rates_kz_text += "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–∑–∂–µ –∫–æ–º–∞–Ω–¥–æ–π /send_rates\n"
    return official_rates_kz_text


async def ru_rate(official_rates_ru):

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
    official_rates_ru_text = "üá∑üá∫<b><u>–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –¶–ë –†–§:</u></b>\n"

    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫
    if official_rates_ru:
        official_rates_ru_text += "<code>"
        official_rates_ru_text += (
            "\n".join(f"{k:<10}{v:<10}" for k, v in official_rates_ru.items())
            + "\n</code>"
        )
    else:
        official_rates_ru_text += "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–∑–∂–µ –∫–æ–º–∞–Ω–¥–æ–π /send_rates\n"
    return official_rates_ru_text


async def get_message():
    # –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å –æ–±–º–µ–Ω–Ω–∏–∫–∞ "–ú–∏–ì" —Å —Å–∞–π—Ç–∞ https://mig.kz
    mig_rates_buy, mig_rates_sell = get_mig_current_rate()
    mig_rates_text = await mig_rate(mig_rates_buy, mig_rates_sell)

    # –ü–æ–ª—É—á–∞–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –ù–ë –†–ö —Å —Å–∞–π—Ç–∞ "https://mig.kz"
    official_rates_kz = get_mig_official_rate()
    official_rates_kz_text = await kz_rate(official_rates_kz)

    # –ü–æ–ª—É—á–∞–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –¶–ë –†–§ —Å —Å–∞–π—Ç–∞
    official_rates_ru = get_cbr_official_rate()
    official_rates_ru_text = await ru_rate(official_rates_ru)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
    message = f"{mig_rates_text}\n{official_rates_kz_text}\n{official_rates_ru_text}"

    logging.debug(f"–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏")
    return message, mig_rates_buy, mig_rates_sell
